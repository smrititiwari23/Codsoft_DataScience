# -*- coding: utf-8 -*-
"""CodSoft - TASK 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zGEycMbEGgapEAyCWrIWgVbQ9cXmmtk1

# **CodSoft - TASK 2**

# **Movie Rating Prediction**
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Load and Preprocess Data
ratings = pd.read_csv('/content/drive/MyDrive/CodSoft/ratings.dat', sep='::', engine='python',encoding='ISO-8859-1', names=['userId', 'movieId', 'rating', 'timestamp'])
users = pd.read_csv('/content/drive/MyDrive/CodSoft/users.dat', sep='::', engine='python',encoding='ISO-8859-1', names=['userId', 'gender', 'age', 'occupation', 'zip'])
movies = pd.read_csv('/content/drive/MyDrive/CodSoft/movies.dat', sep='::', engine='python', encoding='ISO-8859-1',names=['movieId', 'title', 'genres'])

users

# Merge dataframes on common columns
data = pd.merge(pd.merge(ratings, users, on='userId'), movies, on='movieId')

data

# Select relevant features
features = ['gender', 'age', 'occupation', 'genres']

# One-hot encode categorical features
encoder = OneHotEncoder(sparse=False, drop='first')
encoded_features = encoder.fit_transform(data[features])

X = encoded_features
y = data['rating']

X

# Step 2: Splitting the Dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Model Selection and Training
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Step 4: Model Evaluation
y_pred = model.predict(X_test)

# Calculate metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)
